{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_19_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Type d'utilisateur requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, LoginComponent_div_19_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.f[\"userType\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_24_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.f[\"userType\"].value === \"company\" ? \"Login\" : \"Email\", \" requis \");\n  }\n}\nfunction LoginComponent_div_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, LoginComponent_div_24_div_1_Template, 2, 1, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f[\"login\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_div_29_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Mot de passe requis\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtemplate(1, LoginComponent_div_29_div_1_Template, 2, 0, \"div\", 25);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.f[\"password\"].errors[\"required\"]);\n  }\n}\nfunction LoginComponent_span_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 26);\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router, authService, toastr) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.toastr = toastr;\n      this.loading = false;\n      this.submitted = false;\n      // Rediriger si déjà connecté\n      if (this.authService.currentUserValue) {\n        this.redirectBasedOnUserType();\n      }\n    }\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        userType: ['', Validators.required],\n        login: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    get f() {\n      return this.loginForm.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.loginForm.invalid) {\n        return;\n      }\n      this.loading = true;\n      const credentials = {\n        login: this.f['login'].value,\n        password: this.f['password'].value,\n        type: this.f['userType'].value\n      };\n      this.authService.login(credentials).subscribe({\n        next: response => {\n          this.toastr.success('Connexion réussie');\n          this.redirectBasedOnUserType();\n        },\n        error: error => {\n          this.toastr.error(error.error?.message || 'Erreur de connexion');\n          this.loading = false;\n        }\n      });\n    }\n    redirectBasedOnUserType() {\n      const userType = this.authService.getUserType();\n      console.log('User Type Retrieved:', userType); // Log pour vérifier le type d'utilisateur récupéré\n      if (userType === 'company') {\n        this.router.navigate(['/company/home']);\n      } else if (userType === 'agent') {\n        this.router.navigate(['/agent/home']);\n      } else {\n        this.toastr.error('Type d utilisateur non reconnu.');\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.ToastrService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 39,\n      vars: 16,\n      consts: [[1, \"container\", \"mt-5\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"for\", \"userType\"], [\"id\", \"userType\", \"formControlName\", \"userType\", 1, \"form-control\", 3, \"ngClass\"], [\"value\", \"\"], [\"value\", \"agent\"], [\"value\", \"company\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"for\", \"login\"], [\"type\", \"text\", \"id\", \"login\", \"formControlName\", \"login\", 1, \"form-control\", 3, \"ngClass\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"formControlName\", \"password\", 1, \"form-control\", 3, \"ngClass\"], [1, \"d-grid\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [1, \"card-footer\", \"text-center\"], [1, \"mb-0\"], [\"routerLink\", \"/register\", 1, \"text-primary\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h2\");\n          i0.ɵɵtext(6, \"Connexion\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"form\", 6);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_8_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n          i0.ɵɵtext(11, \"Type d'utilisateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"select\", 9)(13, \"option\", 10);\n          i0.ɵɵtext(14, \"S\\u00E9lectionnez un type\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(15, \"option\", 11);\n          i0.ɵɵtext(16, \"Agent\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"option\", 12);\n          i0.ɵɵtext(18, \"Entreprise\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(19, LoginComponent_div_19_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 7)(21, \"label\", 14);\n          i0.ɵɵtext(22);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(23, \"input\", 15);\n          i0.ɵɵtemplate(24, LoginComponent_div_24_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(25, \"div\", 7)(26, \"label\", 16);\n          i0.ɵɵtext(27, \"Mot de passe\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(28, \"input\", 17);\n          i0.ɵɵtemplate(29, LoginComponent_div_29_Template, 2, 1, \"div\", 13);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(30, \"div\", 18)(31, \"button\", 19);\n          i0.ɵɵtemplate(32, LoginComponent_span_32_Template, 1, 0, \"span\", 20);\n          i0.ɵɵtext(33, \" Se connecter \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(34, \"div\", 21)(35, \"p\", 22);\n          i0.ɵɵtext(36, \" Pas encore de compte ? \");\n          i0.ɵɵelementStart(37, \"a\", 23);\n          i0.ɵɵtext(38, \"S'inscrire\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx.submitted && ctx.f[\"userType\"].errors));\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"userType\"].errors);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.f[\"userType\"].value === \"company\" ? \"Login\" : \"Email\");\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, ctx.submitted && ctx.f[\"login\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"login\"].errors);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, ctx.submitted && ctx.f[\"password\"].errors));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ctx.f[\"password\"].errors);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.loading);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink]\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
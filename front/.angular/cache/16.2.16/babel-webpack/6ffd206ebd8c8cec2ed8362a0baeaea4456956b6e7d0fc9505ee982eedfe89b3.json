{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let JobOffersComponent = class JobOffersComponent {\n  constructor(jobOfferService, authService, router, toastr) {\n    this.jobOfferService = jobOfferService;\n    this.authService = authService;\n    this.router = router;\n    this.toastr = toastr;\n    this.offers = [];\n    this.applications = {};\n    this.loading = false;\n    this.error = '';\n    this.userType = null;\n    const currentUser = this.authService.currentUserValue;\n    this.userType = currentUser?.userType || null;\n  }\n  ngOnInit() {\n    this.loadOffers();\n  }\n  loadOffers() {\n    this.loading = true;\n    this.jobOfferService.getAllOffers().subscribe({\n      next: data => {\n        this.offers = data;\n        if (this.canManageApplications()) {\n          this.loadApplicationsForOffers();\n        }\n        this.loading = false;\n      },\n      error: error => {\n        this.error = error.error?.message || 'Erreur lors du chargement des offres';\n        this.loading = false;\n        this.toastr.error(this.error);\n      }\n    });\n  }\n  loadApplicationsForOffers() {\n    this.offers.forEach(offer => {\n      this.jobOfferService.getApplicationsForOffer(offer.id).subscribe({\n        next: applications => {\n          this.applications[offer.id] = applications;\n        },\n        error: error => {\n          this.toastr.error(`Erreur lors du chargement des candidatures pour l'offre ${offer.id}`);\n        }\n      });\n    });\n  }\n  viewOfferDetails(offerId) {\n    this.router.navigate(['/job-offers', offerId]);\n  }\n  applyToOffer(offerId) {\n    this.jobOfferService.applyToOffer(offerId).subscribe({\n      next: () => {\n        this.toastr.success('Votre candidature a été envoyée avec succès');\n      },\n      error: error => {\n        this.toastr.error(error.error?.message || 'Erreur lors de l\\'envoi de la candidature');\n      }\n    });\n  }\n  handleApplication(applicationId, status) {\n    this.jobOfferService.handleApplication(applicationId, status).subscribe({\n      next: () => {\n        this.toastr.success(`Candidature ${status.toLowerCase()}`);\n        this.loadOffers(); // Recharger pour avoir les dernières données\n      },\n\n      error: error => {\n        this.toastr.error(error.error?.message || 'Erreur lors du traitement de la candidature');\n      }\n    });\n  }\n  deleteOffer(offerId) {\n    if (!this.canManageOffers()) {\n      this.toastr.error('Seules les entreprises peuvent supprimer des offres');\n      return;\n    }\n    if (confirm('Êtes-vous sûr de vouloir supprimer cette offre ?')) {\n      this.jobOfferService.deleteOffer(offerId).subscribe({\n        next: () => {\n          this.toastr.success('Offre supprimée avec succès');\n          this.loadOffers();\n        },\n        error: error => {\n          this.toastr.error(error.error?.message || 'Erreur lors de la suppression de l\\'offre');\n        }\n      });\n    }\n  }\n  // Méthodes de vérification des permissions\n  canApply() {\n    return this.userType === null || this.userType === undefined;\n  }\n  canManageOffers() {\n    return this.userType === 'company';\n  }\n  canManageApplications() {\n    return this.userType === 'company' || this.userType === 'agent';\n  }\n  getApplicationsForOffer(offerId) {\n    return this.applications[offerId] || [];\n  }\n  createOffer() {\n    if (!this.canManageOffers()) {\n      this.toastr.error('Seules les entreprises peuvent créer des offres');\n      return;\n    }\n    this.router.navigate(['/job-offers/create']);\n  }\n  getStatusBadgeClass(status) {\n    switch (status) {\n      case 'Accepted':\n        return 'badge bg-success';\n      case 'Pending':\n        return 'badge bg-warning';\n      case 'Rejected':\n        return 'badge bg-danger';\n      default:\n        return 'badge bg-secondary';\n    }\n  }\n};\nJobOffersComponent = __decorate([Component({\n  selector: 'app-job-offers',\n  templateUrl: './job-offers.component.html',\n  styleUrls: ['./job-offers.component.css']\n})], JobOffersComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
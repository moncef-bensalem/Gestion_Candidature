{"ast":null,"code":"import { map, tap } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CompanyStatsService = /*#__PURE__*/(() => {\n  class CompanyStatsService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = environment.apiUrl;\n    }\n    getProfilesCount() {\n      console.log('Calling profiles endpoint:', `${this.apiUrl}/profile/all`);\n      return this.http.get(`${this.apiUrl}/profile/all`).pipe(tap(profiles => console.log('Received profiles:', profiles)), map(profiles => profiles.length), tap(count => console.log('Profile count:', count)));\n    }\n    getOffersCount() {\n      console.log('Calling offers endpoint:', `${this.apiUrl}/jobOffer/all`);\n      return this.http.get(`${this.apiUrl}/jobOffer/all`).pipe(tap(offers => console.log('Received offers:', offers)), map(offers => offers.length), tap(count => console.log('Offers count:', count)));\n    }\n    getNewOffersCount() {\n      console.log('Calling new offers endpoint:', `${this.apiUrl}/jobOffer/all`);\n      return this.http.get(`${this.apiUrl}/jobOffer/all`).pipe(tap(offers => console.log('Received offers for new count:', offers)), map(offers => {\n        const oneWeekAgo = new Date();\n        oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);\n        return offers.filter(offer => new Date(offer.createdAt) >= oneWeekAgo).length;\n      }), tap(count => console.log('New offers count:', count)));\n    }\n    static #_ = this.ɵfac = function CompanyStatsService_Factory(t) {\n      return new (t || CompanyStatsService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CompanyStatsService,\n      factory: CompanyStatsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return CompanyStatsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
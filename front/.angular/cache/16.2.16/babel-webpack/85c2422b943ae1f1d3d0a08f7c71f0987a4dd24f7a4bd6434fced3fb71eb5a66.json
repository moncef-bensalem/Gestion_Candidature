{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport let RoleService = /*#__PURE__*/(() => {\n  class RoleService {\n    constructor() {\n      this.currentRoleSubject = new BehaviorSubject(this.getStoredRole());\n      this.currentRole = this.currentRoleSubject.asObservable();\n    }\n    get currentRoleValue() {\n      return this.currentRoleSubject.value;\n    }\n    setRole(role) {\n      if (role) {\n        localStorage.setItem('userRole', role);\n      } else {\n        localStorage.removeItem('userRole');\n      }\n      this.currentRoleSubject.next(role);\n    }\n    getStoredRole() {\n      const storedRole = localStorage.getItem('userRole');\n      return storedRole;\n    }\n    clearRole() {\n      localStorage.removeItem('userRole');\n      this.currentRoleSubject.next(null);\n    }\n    isAgent() {\n      return this.currentRoleValue === 'agent';\n    }\n    isCompany() {\n      return this.currentRoleValue === 'company';\n    }\n    static #_ = this.ɵfac = function RoleService_Factory(t) {\n      return new (t || RoleService)();\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RoleService,\n      factory: RoleService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RoleService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
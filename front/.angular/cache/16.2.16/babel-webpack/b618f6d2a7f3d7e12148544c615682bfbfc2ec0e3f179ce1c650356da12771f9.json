{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(formBuilder, router, authService, toastr) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.authService = authService;\n    this.toastr = toastr;\n    this.loading = false;\n    this.submitted = false;\n    // Rediriger si déjà connecté\n    if (this.authService.currentUserValue) {\n      this.redirectBasedOnUserType();\n    }\n  }\n  ngOnInit() {\n    this.loginForm = this.formBuilder.group({\n      userType: ['', Validators.required],\n      login: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n  }\n  get f() {\n    return this.loginForm.controls;\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    const credentials = {\n      login: this.f['login'].value,\n      password: this.f['password'].value,\n      type: this.f['userType'].value\n    };\n    console.log('Tentative de connexion avec:', credentials);\n    this.authService.login(credentials).subscribe({\n      next: response => {\n        console.log('Réponse de connexion:', response);\n        if (response && response.token) {\n          this.toastr.success('Connexion réussie');\n          this.loading = false;\n          this.redirectBasedOnUserType();\n        } else {\n          this.toastr.error('Erreur lors de la connexion');\n          this.loading = false;\n        }\n      },\n      error: error => {\n        console.error('Erreur de connexion:', error);\n        this.toastr.error(error.error?.message || 'Erreur de connexion');\n        this.loading = false;\n      }\n    });\n  }\n  redirectBasedOnUserType() {\n    const userType = this.authService.getUserType();\n    console.log('Type d\\'utilisateur pour redirection:', userType);\n    if (userType === 'company') {\n      console.log('Redirection vers l\\'espace entreprise');\n      this.router.navigate(['/company/home']).then(() => {\n        console.log('Navigation réussie vers l\\'espace entreprise');\n        this.toastr.success('Bienvenue dans votre espace entreprise');\n      }, err => {\n        console.error('Erreur de navigation:', err);\n        this.toastr.error('Erreur lors de la redirection');\n      });\n    } else if (userType === 'agent') {\n      console.log('Redirection vers l\\'espace agent');\n      this.router.navigate(['/agent/home']).then(() => {\n        console.log('Navigation réussie vers l\\'espace agent');\n        this.toastr.success('Bienvenue dans votre espace agent');\n      }, err => {\n        console.error('Erreur de navigation:', err);\n        this.toastr.error('Erreur lors de la redirection');\n      });\n    } else {\n      console.error('Type d\\'utilisateur non reconnu:', userType);\n      this.toastr.error('Type d\\'utilisateur non reconnu');\n      this.router.navigate(['/login']);\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
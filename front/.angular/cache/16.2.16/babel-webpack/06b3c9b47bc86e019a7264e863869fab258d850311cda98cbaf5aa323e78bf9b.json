{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../authentication/services/auth.service\";\nexport let JobOfferService = /*#__PURE__*/(() => {\n  class JobOfferService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiUrl = `${environment.apiUrl}/offer`;\n      this.applicationUrl = `${environment.apiUrl}/application`;\n    }\n    // Méthodes pour les offres d'emploi\n    getAllOffers() {\n      return this.http.get(`${this.apiUrl}/all`);\n    }\n    getOfferById(id) {\n      return this.http.get(`${this.apiUrl}/${id}`);\n    }\n    createOffer(offer) {\n      const currentUser = this.authService.getCurrentUser();\n      if (!currentUser || currentUser.type !== 'company') {\n        throw new Error('Seules les entreprises peuvent créer des offres');\n      }\n      return this.http.post(`${this.apiUrl}/create`, offer);\n    }\n    // Méthodes pour les candidatures\n    getApplicationsForOffer(offerId) {\n      const currentUser = this.authService.getCurrentUser();\n      if (!currentUser || currentUser.type !== 'company' && currentUser.type !== 'agent') {\n        throw new Error('Accès non autorisé');\n      }\n      return this.http.get(`${this.applicationUrl}/offer/${offerId}`);\n    }\n    applyToOffer(offerId) {\n      const currentUser = this.authService.getCurrentUser();\n      if (!currentUser) {\n        throw new Error('Vous devez être connecté pour postuler');\n      }\n      return this.http.post(`${this.applicationUrl}/apply/${offerId}`, {});\n    }\n    handleApplication(applicationId, status) {\n      const currentUser = this.authService.getCurrentUser();\n      if (!currentUser || currentUser.type !== 'company' && currentUser.type !== 'agent') {\n        throw new Error('Vous n\\'avez pas les droits pour gérer les candidatures');\n      }\n      return this.http.put(`${this.applicationUrl}/${applicationId}/${status.toLowerCase()}`, {});\n    }\n    // Pour les entreprises uniquement\n    deleteOffer(offerId) {\n      const currentUser = this.authService.getCurrentUser();\n      if (!currentUser || currentUser.type !== 'company') {\n        throw new Error('Seules les entreprises peuvent supprimer des offres');\n      }\n      return this.http.delete(`${this.apiUrl}/delete/${offerId}`);\n    }\n    static #_ = this.ɵfac = function JobOfferService_Factory(t) {\n      return new (t || JobOfferService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: JobOfferService,\n      factory: JobOfferService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return JobOfferService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let RegisterComponent = class RegisterComponent {\n  constructor(formBuilder, router, authService) {\n    this.formBuilder = formBuilder;\n    this.router = router;\n    this.authService = authService;\n    this.registerForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(8)]],\n      confirmPassword: ['', Validators.required],\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      login: ['', [Validators.required, Validators.minLength(3)]],\n      phone: ['', [Validators.required, Validators.minLength(8)]],\n      address: ['', [Validators.required, Validators.minLength(3)]],\n      userType: ['company', Validators.required]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n    this.submitted = false;\n    this.loading = false;\n    this.error = '';\n    this.message = '';\n    this.registrationData = {\n      email: '',\n      password: '',\n      name: '',\n      login: '',\n      phone: '',\n      address: '',\n      userType: 'company'\n    };\n  }\n  ngOnInit() {}\n  get f() {\n    return this.registerForm.controls;\n  }\n  passwordMatchValidator(g) {\n    return g.get('password')?.value === g.get('confirmPassword')?.value ? null : {\n      mismatch: true\n    };\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.registerForm.invalid) {\n      return;\n    }\n    this.loading = true;\n    const formData = this.registerForm.value;\n    this.registrationData = {\n      email: formData.email,\n      password: formData.password,\n      name: formData.name,\n      login: formData.login,\n      phone: formData.phone,\n      address: formData.address,\n      userType: formData.userType\n    };\n    this.authService.register(this.registrationData).subscribe({\n      next: response => {\n        this.message = 'Inscription rÃ©ussie';\n        this.loading = false;\n        this.router.navigate(['/login']);\n      },\n      error: error => {\n        this.error = error.message || 'Une erreur est survenue lors de l\\'inscription';\n        this.loading = false;\n      }\n    });\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})], RegisterComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"ngx-toastr\";\nexport let RoleGuard = /*#__PURE__*/(() => {\n  class RoleGuard {\n    constructor(router, toastr) {\n      this.router = router;\n      this.toastr = toastr;\n    }\n    canActivate(route, state) {\n      const requiredRole = route.data['role'];\n      const userType = localStorage.getItem('userType');\n      const token = localStorage.getItem('token');\n      console.log('RoleGuard - Required Role:', requiredRole);\n      console.log('RoleGuard - User Type:', userType);\n      console.log('RoleGuard - Token exists:', !!token);\n      console.log('RoleGuard - Current URL:', state.url);\n      if (!token) {\n        console.log('RoleGuard - No token found, redirecting to login');\n        this.router.navigate(['/login']);\n        this.toastr.error('Veuillez vous connecter');\n        return false;\n      }\n      if (!userType) {\n        console.log('RoleGuard - No user type found, redirecting to login');\n        this.router.navigate(['/login']);\n        this.toastr.error('Type d\\'utilisateur non défini');\n        return false;\n      }\n      if (userType !== requiredRole) {\n        console.log('RoleGuard - Invalid role, redirecting to appropriate home');\n        const redirectPath = userType === 'company' ? '/company/home' : '/agent/home';\n        this.router.navigate([redirectPath]);\n        this.toastr.error('Accès non autorisé');\n        return false;\n      }\n      console.log('RoleGuard - Access granted');\n      return true;\n    }\n    static #_ = this.ɵfac = function RoleGuard_Factory(t) {\n      return new (t || RoleGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.ToastrService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: RoleGuard,\n      factory: RoleGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return RoleGuard;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
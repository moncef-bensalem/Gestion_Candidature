{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nfunction RegisterComponent_form_16_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 7)(2, \"label\");\n    i0.ɵɵtext(3, \"Nom de l'entreprise\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_16_div_9_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r4.registrationData.name = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 7)(6, \"label\");\n    i0.ɵɵtext(7, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 21);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_16_div_9_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r6.registrationData.login = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\");\n    i0.ɵɵtext(11, \"T\\u00E9l\\u00E9phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"input\", 22);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_16_div_9_Template_input_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r7.registrationData.phone = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\");\n    i0.ɵɵtext(15, \"Adresse\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"input\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_16_div_9_Template_input_ngModelChange_16_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.registrationData.address = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.registrationData.name);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.registrationData.login);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.registrationData.phone);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r2.registrationData.address);\n  }\n}\nfunction RegisterComponent_form_16_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n}\nfunction RegisterComponent_form_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 14);\n    i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_form_16_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 7)(2, \"label\");\n    i0.ɵɵtext(3, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 15);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_16_Template_input_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.registrationData.email = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 7)(6, \"label\");\n    i0.ɵɵtext(7, \"Mot de passe\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_16_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.registrationData.password = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(9, RegisterComponent_form_16_div_9_Template, 17, 4, \"div\", 17);\n    i0.ɵɵelementStart(10, \"button\", 18);\n    i0.ɵɵtemplate(11, RegisterComponent_form_16_span_11_Template, 1, 0, \"span\", 19);\n    i0.ɵɵtext(12, \" S'inscrire \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.registrationData.email);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.registrationData.password);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.userType === \"company\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.loading);\n  }\n}\nfunction RegisterComponent_form_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Code de v\\u00E9rification re\\u00E7u : \", ctx_r13.receivedCode, \" \");\n  }\n}\nfunction RegisterComponent_form_17_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 24);\n  }\n}\nfunction RegisterComponent_form_17_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 14);\n    i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_form_17_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.verifyCode());\n    });\n    i0.ɵɵtemplate(1, RegisterComponent_form_17_div_1_Template, 2, 1, \"div\", 25);\n    i0.ɵɵelementStart(2, \"div\", 7)(3, \"label\");\n    i0.ɵɵtext(4, \"Code de v\\u00E9rification\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"input\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_form_17_Template_input_ngModelChange_5_listener($event) {\n      i0.ɵɵrestoreView(_r16);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r17.verificationCode = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"button\", 18);\n    i0.ɵɵtemplate(7, RegisterComponent_form_17_span_7_Template, 1, 0, \"span\", 19);\n    i0.ɵɵtext(8, \" V\\u00E9rifier \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.receivedCode);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.verificationCode);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.loading);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loading);\n  }\n}\nexport let RegisterComponent = /*#__PURE__*/(() => {\n  class RegisterComponent {\n    constructor(formBuilder, router, authService, toastr) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.toastr = toastr;\n      this.loading = false;\n      this.submitted = false;\n      this.registrationError = false;\n      this.registrationSuccess = false;\n      this.userType = 'agent';\n      this.verificationCode = '';\n      this.showVerificationInput = false;\n      this.receivedCode = null;\n      this.registrationData = {\n        email: '',\n        password: '',\n        name: '',\n        login: '',\n        phone: '',\n        address: '',\n        imageUrl: 'default.jpg'\n      };\n      this.registerForm = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(8)]],\n        confirmPassword: ['', Validators.required],\n        name: ['', [Validators.required, Validators.minLength(3)]],\n        login: ['', [Validators.required, Validators.minLength(3)]],\n        phone: ['', [Validators.required, Validators.minLength(8)]],\n        address: ['', [Validators.required, Validators.minLength(3)]]\n      }, {\n        validators: this.passwordMatchValidator\n      });\n    }\n    ngOnInit() {}\n    get f() {\n      return this.registerForm.controls;\n    }\n    passwordMatchValidator(g) {\n      return g.get('password')?.value === g.get('confirmPassword')?.value ? null : {\n        mismatch: true\n      };\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.registerForm.invalid) {\n        return;\n      }\n      this.loading = true;\n      // Validation des champs pour l'entreprise\n      if (this.userType === 'company') {\n        if (!this.registrationData.name?.trim()) {\n          this.toastr.error('Le nom de l\\'entreprise est obligatoire', 'Erreur de validation');\n          this.loading = false;\n          return;\n        }\n        if (!this.registrationData.login?.trim()) {\n          this.toastr.error('Le login est obligatoire', 'Erreur de validation');\n          this.loading = false;\n          return;\n        }\n        if (!this.registrationData.email?.trim()) {\n          this.toastr.error('L\\'email est obligatoire', 'Erreur de validation');\n          this.loading = false;\n          return;\n        }\n        if (!this.registrationData.password || this.registrationData.password.length < 8) {\n          this.toastr.error('Le mot de passe doit contenir au moins 8 caractères', 'Erreur de validation');\n          this.loading = false;\n          return;\n        }\n      }\n      if (this.userType === 'agent') {\n        this.authService.registerAgent({\n          email: this.registrationData.email,\n          password: this.registrationData.password\n        }).subscribe({\n          next: response => {\n            this.loading = false;\n            this.showVerificationInput = true;\n            this.receivedCode = response.code;\n            this.toastr.success('Veuillez vérifier votre code', 'Inscription réussie');\n          },\n          error: error => {\n            this.loading = false;\n            this.registrationError = true;\n            const errorMessage = error.error?.message || error.message || 'Une erreur est survenue';\n            this.toastr.error(errorMessage, 'Erreur');\n          }\n        });\n      } else if (this.userType === 'company') {\n        // S'assurer que tous les champs requis sont présents\n        const companyData = {\n          ...this.registrationData,\n          imageUrl: this.registrationData.imageUrl || 'default.jpg'\n        };\n        this.authService.registerCompany(companyData).subscribe({\n          next: response => {\n            this.loading = false;\n            this.showVerificationInput = true;\n            this.receivedCode = response.code;\n            this.toastr.success('Veuillez vérifier votre code', 'Inscription réussie');\n          },\n          error: error => {\n            this.loading = false;\n            this.registrationError = true;\n            const errorMessage = error.error?.message || error.message || 'Une erreur est survenue';\n            this.toastr.error(errorMessage, 'Erreur');\n            console.error('Registration error:', error);\n          }\n        });\n      }\n    }\n    verifyCode() {\n      if (!this.verificationCode) {\n        this.toastr.error('Veuillez entrer le code de vérification', 'Erreur');\n        return;\n      }\n      this.loading = true;\n      if (this.userType === 'agent') {\n        this.authService.verifyAgentCode(this.verificationCode).subscribe({\n          next: response => {\n            this.loading = false;\n            this.registrationSuccess = true;\n            this.toastr.success('Compte vérifié avec succès');\n            setTimeout(() => {\n              this.router.navigate(['/login']);\n            }, 2000);\n          },\n          error: error => {\n            this.loading = false;\n            this.registrationError = true;\n            const errorMessage = error.error?.message || 'Code de vérification incorrect';\n            this.toastr.error(errorMessage);\n          }\n        });\n      } else if (this.userType === 'company') {\n        this.authService.verifyCompanyCode(this.verificationCode).subscribe({\n          next: response => {\n            this.loading = false;\n            this.registrationSuccess = true;\n            this.toastr.success('Compte vérifié avec succès');\n            setTimeout(() => {\n              this.router.navigate(['/login']);\n            }, 2000);\n          },\n          error: error => {\n            this.loading = false;\n            this.registrationError = true;\n            const errorMessage = error.error?.message || 'Code de vérification incorrect';\n            this.toastr.error(errorMessage);\n          }\n        });\n      }\n    }\n    static #_ = this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.ToastrService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 21,\n      vars: 3,\n      consts: [[1, \"container\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-6\"], [1, \"card\", \"mt-5\"], [1, \"card-header\"], [1, \"text-center\"], [1, \"card-body\"], [1, \"form-group\", \"mb-3\"], [1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"value\", \"agent\"], [\"value\", \"company\"], [3, \"ngSubmit\", 4, \"ngIf\"], [1, \"mt-3\", \"text-center\"], [\"routerLink\", \"/login\"], [3, \"ngSubmit\"], [\"type\", \"email\", \"name\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm mr-1\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"login\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"tel\", \"name\", \"phone\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"text\", \"name\", \"address\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"spinner-border\", \"spinner-border-sm\", \"mr-1\"], [\"class\", \"alert alert-info\", 4, \"ngIf\"], [\"type\", \"text\", \"name\", \"verificationCode\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"alert\", \"alert-info\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"h4\", 5);\n          i0.ɵɵtext(6, \"Inscription\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 6)(8, \"div\", 7)(9, \"label\");\n          i0.ɵɵtext(10, \"Type d'utilisateur\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"select\", 8);\n          i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_select_ngModelChange_11_listener($event) {\n            return ctx.userType = $event;\n          });\n          i0.ɵɵelementStart(12, \"option\", 9);\n          i0.ɵɵtext(13, \"Agent\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"option\", 10);\n          i0.ɵɵtext(15, \"Entreprise\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(16, RegisterComponent_form_16_Template, 13, 5, \"form\", 11);\n          i0.ɵɵtemplate(17, RegisterComponent_form_17_Template, 9, 4, \"form\", 11);\n          i0.ɵɵelementStart(18, \"div\", 12)(19, \"a\", 13);\n          i0.ɵɵtext(20, \"D\\u00E9j\\u00E0 inscrit ? Connectez-vous\");\n          i0.ɵɵelementEnd()()()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngModel\", ctx.userType);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", !ctx.showVerificationInput);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.showVerificationInput);\n        }\n      },\n      dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.NgSelectOption, i1.ɵNgSelectMultipleOption, i1.DefaultValueAccessor, i1.SelectControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.NgModel, i1.NgForm, i2.RouterLink]\n    });\n  }\n  return RegisterComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}
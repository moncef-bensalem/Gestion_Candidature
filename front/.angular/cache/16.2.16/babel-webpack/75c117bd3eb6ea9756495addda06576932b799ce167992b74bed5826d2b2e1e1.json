{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../auth.service\";\nimport * as i4 from \"ngx-toastr\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(formBuilder, router, authService, toastr) {\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authService = authService;\n      this.toastr = toastr;\n      this.loading = false;\n      this.submitted = false;\n      // Rediriger si déjà connecté\n      if (this.authService.currentUserValue) {\n        this.redirectBasedOnUserType();\n      }\n    }\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        userType: ['', Validators.required],\n        login: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    get f() {\n      return this.loginForm.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      if (this.loginForm.invalid) {\n        return;\n      }\n      this.loading = true;\n      const credentials = {\n        login: this.f['login'].value,\n        password: this.f['password'].value,\n        type: this.f['userType'].value\n      };\n      this.authService.login(credentials).subscribe({\n        next: response => {\n          this.toastr.success('Connexion réussie');\n          this.redirectBasedOnUserType();\n        },\n        error: error => {\n          this.toastr.error(error.error?.message || 'Erreur de connexion');\n          this.loading = false;\n        }\n      });\n    }\n    redirectBasedOnUserType() {\n      const userType = this.authService.getUserType();\n      if (userType === 'company') {\n        this.router.navigate(['/company/home']);\n      } else if (userType === 'agent') {\n        this.router.navigate(['/agent/home']);\n      }\n    }\n    static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.ToastrService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 0,\n      vars: 0,\n      template: function LoginComponent_Template(rf, ctx) {}\n    });\n  }\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}